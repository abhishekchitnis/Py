'''QR Code Encode / Generator'''import pyqrcodefrom PIL import Imageqr = pyqrcode.create('from pyzbar.pyzbar import decode, ZBarSymbol')#The data that you want to storeqr.png('qr.png', scale=10, module_color=(0x66, 0x33, 0x0), background=(0xff, 0xff, 0xff, 0xff))# Open Image to Put the Logoimg = Image.open('qr.png')width, height = img.size# What Size of Logo You Want to Put on the QR Codelogo_size = 159 # Max Size = 159# Open the Logo Imagelogo = Image.open('logo.png')# Calculate xmin, ymin, xmax, ymax to Put the Logoxmin = ymin = int((width / 2) - (logo_size / 2))xmax = ymax = int((width / 2) + (logo_size / 2))# Resize the Logo as Calculatedlogo = logo.resize((xmax - xmin, ymax - ymin))# Put the Logo on the QR Codeimg.paste(logo, (xmin, ymin, xmax, ymax))img.save('qrc.png')#img.show()'''QR Code Decoder / Scanned Output'''import openpyxl	from pyzbar.pyzbar import decode, ZBarSymbol	decoded = decode(Image.open("qrc.png"),symbols=[ZBarSymbol.QRCODE])wb = openpyxl.load_workbook(filename = "! EDIT ME.xlsx", data_only=True) cell = wb['EnDeQR']['C2']cell.value = str(decoded)print(decoded)detext = wb['EnDeQR']['C4']print(detext.value)wb.save("! EDIT ME.xlsx")