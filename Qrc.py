'''QR Code Encode / Generator'''# -------------------------------------------------------- EnCode Method 1 ----------------------------------------------------import qrcode# Create qr code instanceqr = qrcode.QRCode(    version = 1,    error_correction = qrcode.constants.ERROR_CORRECT_H,    box_size = 10,    border = 4,)# The data that you want to storedata = "Abhishek Chitnis"# Add dataqr.add_data(data)qr.make(fit=True)# Create an image from the QR Code instanceimg = qr.make_image()# Save it somewhere, change the extension as needed:# img.save("image.png")# img.save("image.bmp")# img.save("image.jpeg")img.save("img.png")# -------------------------------------------------------- EnCode Method 2 ----------------------------------------------------import pyqrcodefrom PIL import Imageqr = pyqrcode.create('123456 Chitnis abcdef')#The data that you want to storeqr.png('qr.png', scale=10, module_color=(0x66, 0x33, 0x0), background=(0xff, 0xff, 0xff, 0xff))# Open Image to Put the Logoimg = Image.open('qr.png')width, height = img.size# What Size of Logo You Want to Put on the QR Codelogo_size = 98 # Max Size = 159# Open the Logo Imagelogo = Image.open('logo.png')# Calculate xmin, ymin, xmax, ymax to Put the Logoxmin = ymin = int((width / 2) - (logo_size / 2))xmax = ymax = int((width / 2) + (logo_size / 2))# Resize the Logo as Calculatedlogo = logo.resize((xmax - xmin, ymax - ymin))# Put the Logo on the QR Codeimg.paste(logo, (xmin, ymin, xmax, ymax))img.save('qrc.png')#img.show()'''QR Code Decoder / Scanned Output'''# --------------------------------------------------- DeCode Method 1 & 2 -----------------------------------------------------from pyzbar.pyzbar import decode, ZBarSymbol	from PIL import Imagedeimg = decode(Image.open("img.png"),symbols=[ZBarSymbol.QRCODE])print('\n',deimg,'\n')deqrc = decode(Image.open("qrc.png"),symbols=[ZBarSymbol.QRCODE])print('\n',deqrc,'\n')